{"version":3,"file":"326.js","mappings":"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","sources":["webpack://office-addin-taskpane-react/./node_modules/@azure/msal-browser/dist/naa/mapping/NestedAppAuthAdapter.mjs","webpack://office-addin-taskpane-react/./node_modules/@azure/msal-browser/dist/naa/BridgeError.mjs","webpack://office-addin-taskpane-react/./node_modules/@azure/msal-browser/dist/error/NestedAppAuthError.mjs","webpack://office-addin-taskpane-react/./node_modules/@azure/msal-browser/dist/controllers/NestedAppAuthController.mjs"],"sourcesContent":["/*! @azure/msal-browser v3.7.1 2024-01-23 */\n'use strict';\nimport { RequestParameterBuilder, StringUtils, AuthenticationScheme, createClientAuthError, ClientAuthErrorCodes, AuthToken, AuthError, InteractionRequiredAuthError, ServerError, ClientAuthError } from '@azure/msal-common';\nimport { isBridgeError } from '../BridgeError.mjs';\nimport { BridgeStatusCode } from '../BridgeStatusCode.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass NestedAppAuthAdapter {\n    constructor(clientId, clientCapabilities, crypto, logger) {\n        this.clientId = clientId;\n        this.clientCapabilities = clientCapabilities;\n        this.crypto = crypto;\n        this.logger = logger;\n    }\n    toNaaTokenRequest(request) {\n        let extraParams;\n        if (request.extraQueryParameters === undefined) {\n            extraParams = new Map();\n        }\n        else {\n            extraParams = new Map(Object.entries(request.extraQueryParameters));\n        }\n        const requestBuilder = new RequestParameterBuilder();\n        const claims = requestBuilder.addClientCapabilitiesToClaims(request.claims, this.clientCapabilities);\n        const tokenRequest = {\n            platformBrokerId: request.account?.homeAccountId,\n            clientId: this.clientId,\n            authority: request.authority,\n            scope: request.scopes.join(\" \"),\n            correlationId: request.correlationId !== undefined\n                ? request.correlationId\n                : this.crypto.createNewGuid(),\n            claims: !StringUtils.isEmptyObj(claims) ? claims : undefined,\n            state: request.state,\n            authenticationScheme: request.authenticationScheme || AuthenticationScheme.BEARER,\n            extraParameters: extraParams,\n        };\n        return tokenRequest;\n    }\n    fromNaaTokenResponse(request, response, reqTimestamp) {\n        if (!response.token.id_token || !response.token.access_token) {\n            throw createClientAuthError(ClientAuthErrorCodes.nullOrEmptyToken);\n        }\n        const expiresOn = new Date((reqTimestamp + (response.token.expires_in || 0)) * 1000);\n        const idTokenClaims = AuthToken.extractTokenClaims(response.token.id_token, this.crypto.base64Decode);\n        const account = this.fromNaaAccountInfo(response.account, idTokenClaims);\n        const scopes = response.token.scope || request.scope;\n        const authenticationResult = {\n            authority: response.token.authority || account.environment,\n            uniqueId: account.localAccountId,\n            tenantId: account.tenantId,\n            scopes: scopes.split(\" \"),\n            account,\n            idToken: response.token.id_token,\n            idTokenClaims,\n            accessToken: response.token.access_token,\n            fromCache: true,\n            expiresOn: expiresOn,\n            tokenType: request.authenticationScheme || AuthenticationScheme.BEARER,\n            correlationId: request.correlationId,\n            extExpiresOn: expiresOn,\n            state: request.state,\n        };\n        return authenticationResult;\n    }\n    /*\n     *  export type AccountInfo = {\n     *     homeAccountId: string;\n     *     environment: string;\n     *     tenantId: string;\n     *     username: string;\n     *     localAccountId: string;\n     *     name?: string;\n     *     idToken?: string;\n     *     idTokenClaims?: TokenClaims & {\n     *         [key: string]:\n     *             | string\n     *             | number\n     *             | string[]\n     *             | object\n     *             | undefined\n     *             | unknown;\n     *     };\n     *     nativeAccountId?: string;\n     *     authorityType?: string;\n     * };\n     */\n    fromNaaAccountInfo(fromAccount, idTokenClaims) {\n        const effectiveIdTokenClaims = idTokenClaims || fromAccount.idTokenClaims;\n        const localAccountId = fromAccount.localAccountId ||\n            effectiveIdTokenClaims?.oid ||\n            effectiveIdTokenClaims?.sub ||\n            \"\";\n        const tenantId = fromAccount.tenantId || effectiveIdTokenClaims?.tid || \"\";\n        const homeAccountId = fromAccount.homeAccountId || `${localAccountId}.${tenantId}`;\n        const username = fromAccount.username ||\n            effectiveIdTokenClaims?.preferred_username ||\n            \"\";\n        const name = fromAccount.name || effectiveIdTokenClaims?.name;\n        const account = {\n            homeAccountId,\n            environment: fromAccount.environment,\n            tenantId,\n            username,\n            localAccountId,\n            name,\n            idToken: fromAccount.idToken,\n            idTokenClaims: effectiveIdTokenClaims,\n        };\n        return account;\n    }\n    /**\n     *\n     * @param error BridgeError\n     * @returns AuthError, ClientAuthError, ClientConfigurationError, ServerError, InteractionRequiredError\n     */\n    fromBridgeError(error) {\n        if (isBridgeError(error)) {\n            switch (error.status) {\n                case BridgeStatusCode.UserCancel:\n                    return new ClientAuthError(ClientAuthErrorCodes.userCanceled);\n                case BridgeStatusCode.NoNetwork:\n                    return new ClientAuthError(ClientAuthErrorCodes.noNetworkConnectivity);\n                case BridgeStatusCode.AccountUnavailable:\n                    return new ClientAuthError(ClientAuthErrorCodes.noAccountFound);\n                case BridgeStatusCode.Disabled:\n                    return new ClientAuthError(ClientAuthErrorCodes.nestedAppAuthBridgeDisabled);\n                case BridgeStatusCode.NestedAppAuthUnavailable:\n                    return new ClientAuthError(error.code ||\n                        ClientAuthErrorCodes.nestedAppAuthBridgeDisabled, error.description);\n                case BridgeStatusCode.TransientError:\n                case BridgeStatusCode.PersistentError:\n                    return new ServerError(error.code, error.description);\n                case BridgeStatusCode.UserInteractionRequired:\n                    return new InteractionRequiredAuthError(error.code, error.description);\n                default:\n                    return new AuthError(error.code, error.description);\n            }\n        }\n        else {\n            return new AuthError(\"unknown_error\", \"An unknown error occurred\");\n        }\n    }\n}\n\nexport { NestedAppAuthAdapter };\n//# sourceMappingURL=NestedAppAuthAdapter.mjs.map\n","/*! @azure/msal-browser v3.7.1 2024-01-23 */\n'use strict';\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nfunction isBridgeError(error) {\n    return error.status !== undefined;\n}\n\nexport { isBridgeError };\n//# sourceMappingURL=BridgeError.mjs.map\n","/*! @azure/msal-browser v3.7.1 2024-01-23 */\n'use strict';\nimport { AuthError } from '@azure/msal-common';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * NestedAppAuthErrorMessage class containing string constants used by error codes and messages.\n */\nconst NestedAppAuthErrorMessage = {\n    unsupportedMethod: {\n        code: \"unsupported_method\",\n        desc: \"The PKCE code challenge and verifier could not be generated.\",\n    },\n};\nclass NestedAppAuthError extends AuthError {\n    constructor(errorCode, errorMessage) {\n        super(errorCode, errorMessage);\n        Object.setPrototypeOf(this, NestedAppAuthError.prototype);\n        this.name = \"NestedAppAuthError\";\n    }\n    static createUnsupportedError() {\n        return new NestedAppAuthError(NestedAppAuthErrorMessage.unsupportedMethod.code, NestedAppAuthErrorMessage.unsupportedMethod.desc);\n    }\n}\n\nexport { NestedAppAuthError, NestedAppAuthErrorMessage };\n//# sourceMappingURL=NestedAppAuthError.mjs.map\n","/*! @azure/msal-browser v3.7.1 2024-01-23 */\n'use strict';\nimport { DEFAULT_CRYPTO_IMPLEMENTATION, PerformanceEvents, TimeUtils } from '@azure/msal-common';\nimport { InteractionType } from '../utils/BrowserConstants.mjs';\nimport { CryptoOps } from '../crypto/CryptoOps.mjs';\nimport { NestedAppAuthAdapter } from '../naa/mapping/NestedAppAuthAdapter.mjs';\nimport { NestedAppAuthError } from '../error/NestedAppAuthError.mjs';\nimport { EventHandler } from '../event/EventHandler.mjs';\nimport { EventType } from '../event/EventType.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass NestedAppAuthController {\n    constructor(operatingContext) {\n        this.operatingContext = operatingContext;\n        const proxy = this.operatingContext.getBridgeProxy();\n        if (proxy !== undefined) {\n            this.bridgeProxy = proxy;\n        }\n        else {\n            throw new Error(\"unexpected: bridgeProxy is undefined\");\n        }\n        // Set the configuration.\n        this.config = operatingContext.getConfig();\n        // Initialize logger\n        this.logger = this.operatingContext.getLogger();\n        // Initialize performance client\n        this.performanceClient = this.config.telemetry.client;\n        // Initialize the crypto class.\n        this.browserCrypto = operatingContext.isBrowserEnvironment()\n            ? new CryptoOps(this.logger, this.performanceClient)\n            : DEFAULT_CRYPTO_IMPLEMENTATION;\n        this.eventHandler = new EventHandler(this.logger, this.browserCrypto);\n        this.nestedAppAuthAdapter = new NestedAppAuthAdapter(this.config.auth.clientId, this.config.auth.clientCapabilities, this.browserCrypto, this.logger);\n    }\n    getBrowserStorage() {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    getEventHandler() {\n        return this.eventHandler;\n    }\n    static async createController(operatingContext) {\n        const controller = new NestedAppAuthController(operatingContext);\n        return Promise.resolve(controller);\n    }\n    initialize() {\n        // do nothing not required by this controller\n        return Promise.resolve();\n    }\n    async acquireTokenInteractive(request) {\n        this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_START, InteractionType.Popup, request);\n        const atPopupMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.AcquireTokenPopup, request.correlationId);\n        atPopupMeasurement?.add({ nestedAppAuthRequest: true });\n        try {\n            const naaRequest = this.nestedAppAuthAdapter.toNaaTokenRequest(request);\n            const reqTimestamp = TimeUtils.nowSeconds();\n            const response = await this.bridgeProxy.getTokenInteractive(naaRequest);\n            const result = this.nestedAppAuthAdapter.fromNaaTokenResponse(naaRequest, response, reqTimestamp);\n            this.operatingContext.setActiveAccount(result.account);\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_SUCCESS, InteractionType.Popup, result);\n            atPopupMeasurement.add({\n                accessTokenSize: result.accessToken.length,\n                idTokenSize: result.idToken.length,\n            });\n            atPopupMeasurement.end({\n                success: true,\n                requestId: result.requestId,\n            });\n            return result;\n        }\n        catch (e) {\n            const error = this.nestedAppAuthAdapter.fromBridgeError(e);\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Popup, null, e);\n            atPopupMeasurement.end({\n                errorCode: error.errorCode,\n                subErrorCode: error.subError,\n                success: false,\n            });\n            throw error;\n        }\n    }\n    async acquireTokenSilentInternal(request) {\n        this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_START, InteractionType.Silent, request);\n        const ssoSilentMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.SsoSilent, request.correlationId);\n        ssoSilentMeasurement?.increment({\n            visibilityChangeCount: 0,\n        });\n        ssoSilentMeasurement?.add({\n            nestedAppAuthRequest: true,\n        });\n        try {\n            const naaRequest = this.nestedAppAuthAdapter.toNaaTokenRequest(request);\n            const reqTimestamp = TimeUtils.nowSeconds();\n            const response = await this.bridgeProxy.getTokenSilent(naaRequest);\n            const result = this.nestedAppAuthAdapter.fromNaaTokenResponse(naaRequest, response, reqTimestamp);\n            this.operatingContext.setActiveAccount(result.account);\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_SUCCESS, InteractionType.Silent, result);\n            ssoSilentMeasurement?.add({\n                accessTokenSize: result.accessToken.length,\n                idTokenSize: result.idToken.length,\n            });\n            ssoSilentMeasurement?.end({\n                success: true,\n                requestId: result.requestId,\n            });\n            return result;\n        }\n        catch (e) {\n            const error = this.nestedAppAuthAdapter.fromBridgeError(e);\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Silent, null, e);\n            ssoSilentMeasurement?.end({\n                errorCode: error.errorCode,\n                subErrorCode: error.subError,\n                success: false,\n            });\n            throw error;\n        }\n    }\n    async acquireTokenPopup(request) {\n        return this.acquireTokenInteractive(request);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    acquireTokenRedirect(request) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    async acquireTokenSilent(silentRequest) {\n        return this.acquireTokenSilentInternal(silentRequest);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    acquireTokenByCode(request // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    acquireTokenNative(request, apiId, // eslint-disable-line @typescript-eslint/no-unused-vars\n    accountId // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    acquireTokenByRefreshToken(commonRequest, // eslint-disable-line @typescript-eslint/no-unused-vars\n    silentRequest // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    /**\n     * Adds event callbacks to array\n     * @param callback\n     */\n    addEventCallback(callback) {\n        return this.eventHandler.addEventCallback(callback);\n    }\n    /**\n     * Removes callback with provided id from callback array\n     * @param callbackId\n     */\n    removeEventCallback(callbackId) {\n        this.eventHandler.removeEventCallback(callbackId);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    addPerformanceCallback(callback) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    removePerformanceCallback(callbackId) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    enableAccountStorageEvents() {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    disableAccountStorageEvents() {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    getAccount(accountFilter) {\n        throw NestedAppAuthError.createUnsupportedError();\n        // TODO: Look at standard implementation\n    }\n    getAccountByHomeId(homeAccountId) {\n        const currentAccount = this.operatingContext.getActiveAccount();\n        if (currentAccount !== undefined) {\n            if (currentAccount.homeAccountId === homeAccountId) {\n                return this.nestedAppAuthAdapter.fromNaaAccountInfo(currentAccount);\n            }\n            else {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    getAccountByLocalId(localId) {\n        const currentAccount = this.operatingContext.getActiveAccount();\n        if (currentAccount !== undefined) {\n            if (currentAccount.localAccountId === localId) {\n                return this.nestedAppAuthAdapter.fromNaaAccountInfo(currentAccount);\n            }\n            else {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    getAccountByUsername(userName) {\n        const currentAccount = this.operatingContext.getActiveAccount();\n        if (currentAccount !== undefined) {\n            if (currentAccount.username === userName) {\n                return this.nestedAppAuthAdapter.fromNaaAccountInfo(currentAccount);\n            }\n            else {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    getAllAccounts() {\n        const currentAccount = this.operatingContext.getActiveAccount();\n        if (currentAccount !== undefined) {\n            return [\n                this.nestedAppAuthAdapter.fromNaaAccountInfo(currentAccount),\n            ];\n        }\n        else {\n            return [];\n        }\n    }\n    handleRedirectPromise(hash // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    loginPopup(request // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n        if (request !== undefined) {\n            return this.acquireTokenInteractive(request);\n        }\n        else {\n            throw NestedAppAuthError.createUnsupportedError();\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    loginRedirect(request) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    logout(logoutRequest) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    logoutRedirect(logoutRequest // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    logoutPopup(logoutRequest // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    ssoSilent(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    request) {\n        return this.acquireTokenSilentInternal(request);\n    }\n    getTokenCache() {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    /**\n     * Returns the logger instance\n     */\n    getLogger() {\n        return this.logger;\n    }\n    /**\n     * Replaces the default logger set in configurations with new Logger with new configurations\n     * @param logger Logger instance\n     */\n    setLogger(logger) {\n        this.logger = logger;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    setActiveAccount(account) {\n        /*\n         * StandardController uses this to allow the developer to set the active account\n         * in the nested app auth scenario the active account is controlled by the app hosting the nested app\n         */\n        this.logger.warning(\"nestedAppAuth does not support setActiveAccount\");\n        return;\n    }\n    getActiveAccount() {\n        const currentAccount = this.operatingContext.getActiveAccount();\n        if (currentAccount !== undefined) {\n            return this.nestedAppAuthAdapter.fromNaaAccountInfo(currentAccount);\n        }\n        else {\n            return null;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    initializeWrapperLibrary(sku, version) {\n        /*\n         * Standard controller uses this to set the sku and version of the wrapper library in the storage\n         * we do nothing here\n         */\n        return;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    setNavigationClient(navigationClient) {\n        this.logger.warning(\"setNavigationClient is not supported in nested app auth\");\n    }\n    getConfiguration() {\n        return this.config;\n    }\n    isBrowserEnv() {\n        return this.operatingContext.isBrowserEnvironment();\n    }\n    getBrowserCrypto() {\n        return this.browserCrypto;\n    }\n    getPerformanceClient() {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    getRedirectResponse() {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    preflightBrowserEnvironmentCheck(interactionType, // eslint-disable-line @typescript-eslint/no-unused-vars\n    setInteractionInProgress // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async clearCache(logoutRequest) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async hydrateCache(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    result, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    request) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n}\n\nexport { NestedAppAuthController };\n//# sourceMappingURL=NestedAppAuthController.mjs.map\n"],"names":["NestedAppAuthAdapter","constructor","clientId","clientCapabilities","crypto","logger","this","toNaaTokenRequest","request","extraParams","undefined","extraQueryParameters","Map","Object","entries","claims","RequestParameterBuilder","addClientCapabilitiesToClaims","platformBrokerId","account","homeAccountId","authority","scope","scopes","join","correlationId","createNewGuid","StringUtils","isEmptyObj","state","authenticationScheme","BEARER","extraParameters","fromNaaTokenResponse","response","reqTimestamp","token","id_token","access_token","ClientAuthErrorCodes","nullOrEmptyToken","expiresOn","Date","expires_in","idTokenClaims","AuthToken","base64Decode","fromNaaAccountInfo","environment","uniqueId","localAccountId","tenantId","split","idToken","accessToken","fromCache","tokenType","extExpiresOn","fromAccount","effectiveIdTokenClaims","oid","sub","tid","username","preferred_username","name","fromBridgeError","error","status","isBridgeError","AuthError","BridgeStatusCode","UserCancel","ClientAuthError","userCanceled","NoNetwork","noNetworkConnectivity","AccountUnavailable","noAccountFound","Disabled","nestedAppAuthBridgeDisabled","NestedAppAuthUnavailable","code","description","TransientError","PersistentError","ServerError","UserInteractionRequired","InteractionRequiredAuthError","NestedAppAuthErrorMessage","NestedAppAuthError","errorCode","errorMessage","super","setPrototypeOf","prototype","createUnsupportedError","NestedAppAuthController","operatingContext","proxy","getBridgeProxy","Error","bridgeProxy","config","getConfig","getLogger","performanceClient","telemetry","client","browserCrypto","isBrowserEnvironment","CryptoOps","eventHandler","EventHandler","nestedAppAuthAdapter","auth","getBrowserStorage","getEventHandler","createController","controller","Promise","resolve","initialize","acquireTokenInteractive","emitEvent","EventType","ACQUIRE_TOKEN_START","Popup","atPopupMeasurement","startMeasurement","PerformanceEvent","AcquireTokenPopup","add","nestedAppAuthRequest","naaRequest","TimeUtils","nowSeconds","getTokenInteractive","result","setActiveAccount","ACQUIRE_TOKEN_SUCCESS","accessTokenSize","length","idTokenSize","end","success","requestId","e","ACQUIRE_TOKEN_FAILURE","subErrorCode","subError","acquireTokenSilentInternal","Silent","ssoSilentMeasurement","SsoSilent","increment","visibilityChangeCount","getTokenSilent","acquireTokenPopup","acquireTokenRedirect","acquireTokenSilent","silentRequest","acquireTokenByCode","acquireTokenNative","apiId","accountId","acquireTokenByRefreshToken","commonRequest","addEventCallback","callback","removeEventCallback","callbackId","addPerformanceCallback","removePerformanceCallback","enableAccountStorageEvents","disableAccountStorageEvents","getAccount","accountFilter","getAccountByHomeId","currentAccount","getActiveAccount","getAccountByLocalId","localId","getAccountByUsername","userName","getAllAccounts","handleRedirectPromise","hash","loginPopup","loginRedirect","logout","logoutRequest","logoutRedirect","logoutPopup","ssoSilent","getTokenCache","setLogger","warning","initializeWrapperLibrary","sku","version","setNavigationClient","navigationClient","getConfiguration","isBrowserEnv","getBrowserCrypto","getPerformanceClient","getRedirectResponse","preflightBrowserEnvironmentCheck","interactionType","setInteractionInProgress","clearCache","hydrateCache"],"sourceRoot":""}