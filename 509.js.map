{"version":3,"file":"509.js","mappings":"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","sources":["webpack://office-addin-taskpane-react/./node_modules/@azure/msal-browser/dist/naa/BridgeStatusCode.mjs","webpack://office-addin-taskpane-react/./node_modules/@azure/msal-browser/dist/naa/mapping/NestedAppAuthAdapter.mjs","webpack://office-addin-taskpane-react/./node_modules/@azure/msal-browser/dist/naa/BridgeError.mjs","webpack://office-addin-taskpane-react/./node_modules/@azure/msal-browser/dist/error/NestedAppAuthError.mjs","webpack://office-addin-taskpane-react/./node_modules/@azure/msal-browser/dist/controllers/NestedAppAuthController.mjs"],"sourcesContent":["/*! @azure/msal-browser v3.5.0 2023-11-07 */\n'use strict';\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nvar BridgeStatusCode;\n(function (BridgeStatusCode) {\n    BridgeStatusCode[\"USER_INTERACTION_REQUIRED\"] = \"USER_INTERACTION_REQUIRED\";\n    BridgeStatusCode[\"USER_CANCEL\"] = \"USER_CANCEL\";\n    BridgeStatusCode[\"NO_NETWORK\"] = \"NO_NETWORK\";\n    BridgeStatusCode[\"TRANSIENT_ERROR\"] = \"TRANSIENT_ERROR\";\n    BridgeStatusCode[\"PERSISTENT_ERROR\"] = \"PERSISTENT_ERROR\";\n    BridgeStatusCode[\"DISABLED\"] = \"DISABLED\";\n    BridgeStatusCode[\"ACCOUNT_UNAVAILABLE\"] = \"ACCOUNT_UNAVAILABLE\";\n    BridgeStatusCode[\"NESTED_APP_AUTH_UNAVAILABLE\"] = \"NESTED_APP_AUTH_UNAVAILABLE\";\n})(BridgeStatusCode || (BridgeStatusCode = {}));\n\nexport { BridgeStatusCode };\n//# sourceMappingURL=BridgeStatusCode.mjs.map\n","/*! @azure/msal-browser v3.5.0 2023-11-07 */\n'use strict';\nimport { TimeUtils, AuthToken, AuthError, InteractionRequiredAuthError, ServerError, ClientAuthError, ClientAuthErrorCodes } from '@azure/msal-common';\nimport { isBridgeError } from '../BridgeError.mjs';\nimport { BridgeStatusCode } from '../BridgeStatusCode.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass NestedAppAuthAdapter {\n    constructor(clientId, clientCapabilities, crypto, logger) {\n        this.clientId = clientId;\n        this.clientCapabilities = clientCapabilities;\n        this.crypto = crypto;\n        this.logger = logger;\n    }\n    toNaaSilentTokenRequest(request) {\n        let extraParams;\n        if (request.extraQueryParameters === undefined) {\n            extraParams = new Map();\n        }\n        else {\n            extraParams = new Map(Object.entries(request.extraQueryParameters));\n        }\n        /**\n         * Need to get information about the client to populate request correctly\n         * For example: client id, client capabilities\n         */\n        const tokenRequest = {\n            userObjectId: request.account?.homeAccountId,\n            clientId: this.clientId,\n            authority: request.authority,\n            scope: request.scopes.join(\" \"),\n            correlationId: request.correlationId !== undefined\n                ? request.correlationId\n                : this.crypto.createNewGuid(),\n            prompt: request.prompt !== undefined ? request.prompt : \"\",\n            claims: request.claims !== undefined ? request.claims : \"\",\n            authenticationScheme: request.authenticationScheme !== undefined\n                ? request.authenticationScheme\n                : \"\",\n            clientCapabilities: this.clientCapabilities,\n            extraParameters: extraParams,\n        };\n        return tokenRequest;\n    }\n    toNaaTokenRequest(request) {\n        let extraParams;\n        if (request.extraQueryParameters === undefined) {\n            extraParams = new Map();\n        }\n        else {\n            extraParams = new Map(Object.entries(request.extraQueryParameters));\n        }\n        const tokenRequest = {\n            userObjectId: request.account?.homeAccountId,\n            clientId: this.clientId,\n            authority: request.authority,\n            scope: request.scopes.join(\" \"),\n            correlationId: request.correlationId !== undefined\n                ? request.correlationId\n                : \"\",\n            prompt: request.prompt !== undefined ? request.prompt : \"\",\n            nonce: request.nonce !== undefined ? request.nonce : \"\",\n            claims: request.claims !== undefined ? request.claims : \"\",\n            state: request.state !== undefined ? request.state : \"\",\n            authenticationScheme: request.authenticationScheme !== undefined\n                ? request.authenticationScheme\n                : \"\",\n            clientCapabilities: undefined,\n            extraParameters: extraParams,\n        };\n        return tokenRequest;\n    }\n    fromNaaTokenResponse(request, response) {\n        const expiresOn = new Date(TimeUtils.nowSeconds() + (response.expires_in || 0) * 1000);\n        const account = this.fromNaaAccountInfo(response.account);\n        const authenticationResult = {\n            authority: response.account.environment,\n            uniqueId: response.account.homeAccountId,\n            tenantId: response.account.tenantId,\n            scopes: response.scope.split(\" \"),\n            account: this.fromNaaAccountInfo(response.account),\n            idToken: response.id_token !== undefined ? response.id_token : \"\",\n            idTokenClaims: account.idTokenClaims !== undefined\n                ? account.idTokenClaims\n                : {},\n            accessToken: response.access_token,\n            fromCache: true,\n            expiresOn: expiresOn,\n            tokenType: request.authenticationScheme !== undefined\n                ? request.authenticationScheme\n                : \"Bearer\",\n            correlationId: request.correlationId,\n            requestId: \"\",\n            extExpiresOn: expiresOn,\n            state: response.state,\n        };\n        return authenticationResult;\n    }\n    /*\n     *  export type AccountInfo = {\n     *     homeAccountId: string;\n     *     environment: string;\n     *     tenantId: string;\n     *     username: string;\n     *     localAccountId: string;\n     *     name?: string;\n     *     idToken?: string;\n     *     idTokenClaims?: TokenClaims & {\n     *         [key: string]:\n     *             | string\n     *             | number\n     *             | string[]\n     *             | object\n     *             | undefined\n     *             | unknown;\n     *     };\n     *     nativeAccountId?: string;\n     *     authorityType?: string;\n     * };\n     */\n    fromNaaAccountInfo(fromAccount) {\n        let tokenClaims;\n        if (fromAccount.idToken !== undefined) {\n            tokenClaims = AuthToken.extractTokenClaims(fromAccount.idToken, this.crypto.base64Decode);\n        }\n        else {\n            tokenClaims = undefined;\n        }\n        const account = {\n            homeAccountId: fromAccount.homeAccountId,\n            environment: fromAccount.environment,\n            tenantId: fromAccount.tenantId,\n            username: fromAccount.username,\n            localAccountId: fromAccount.localAccountId,\n            name: fromAccount.name,\n            idToken: fromAccount.idToken,\n            idTokenClaims: tokenClaims,\n        };\n        return account;\n    }\n    /**\n     *\n     * @param error BridgeError\n     * @returns AuthError, ClientAuthError, ClientConfigurationError, ServerError, InteractionRequiredError\n     */\n    fromBridgeError(error) {\n        if (isBridgeError(error)) {\n            switch (error.status) {\n                case BridgeStatusCode.USER_CANCEL:\n                    return new ClientAuthError(ClientAuthErrorCodes.userCanceled);\n                case BridgeStatusCode.NO_NETWORK:\n                    return new ClientAuthError(ClientAuthErrorCodes.noNetworkConnectivity);\n                case BridgeStatusCode.ACCOUNT_UNAVAILABLE:\n                    return new ClientAuthError(ClientAuthErrorCodes.noAccountFound);\n                case BridgeStatusCode.DISABLED:\n                    return new ClientAuthError(ClientAuthErrorCodes.nestedAppAuthBridgeDisabled);\n                case BridgeStatusCode.NESTED_APP_AUTH_UNAVAILABLE:\n                    return new ClientAuthError(error.code, error.description);\n                case BridgeStatusCode.TRANSIENT_ERROR:\n                case BridgeStatusCode.PERSISTENT_ERROR:\n                    return new ServerError(error.code, error.description);\n                case BridgeStatusCode.USER_INTERACTION_REQUIRED:\n                    return new InteractionRequiredAuthError(error.code, error.description);\n                default:\n                    return new AuthError(error.code, error.description);\n            }\n        }\n        else {\n            return new AuthError(\"unknown_error\", \"An unknown error occurred\");\n        }\n    }\n}\n\nexport { NestedAppAuthAdapter };\n//# sourceMappingURL=NestedAppAuthAdapter.mjs.map\n","/*! @azure/msal-browser v3.5.0 2023-11-07 */\n'use strict';\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nfunction isBridgeError(error) {\n    return error.status !== undefined;\n}\n\nexport { isBridgeError };\n//# sourceMappingURL=BridgeError.mjs.map\n","/*! @azure/msal-browser v3.5.0 2023-11-07 */\n'use strict';\nimport { AuthError } from '@azure/msal-common';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * NestedAppAuthErrorMessage class containing string constants used by error codes and messages.\n */\nconst NestedAppAuthErrorMessage = {\n    unsupportedMethod: {\n        code: \"unsupported_method\",\n        desc: \"The PKCE code challenge and verifier could not be generated.\",\n    },\n};\nclass NestedAppAuthError extends AuthError {\n    constructor(errorCode, errorMessage) {\n        super(errorCode, errorMessage);\n        Object.setPrototypeOf(this, NestedAppAuthError.prototype);\n        this.name = \"NestedAppAuthError\";\n    }\n    static createUnsupportedError() {\n        return new NestedAppAuthError(NestedAppAuthErrorMessage.unsupportedMethod.code, NestedAppAuthErrorMessage.unsupportedMethod.desc);\n    }\n}\n\nexport { NestedAppAuthError, NestedAppAuthErrorMessage };\n//# sourceMappingURL=NestedAppAuthError.mjs.map\n","/*! @azure/msal-browser v3.5.0 2023-11-07 */\n'use strict';\nimport { DEFAULT_CRYPTO_IMPLEMENTATION, PerformanceEvents } from '@azure/msal-common';\nimport { InteractionType } from '../utils/BrowserConstants.mjs';\nimport { CryptoOps } from '../crypto/CryptoOps.mjs';\nimport { NestedAppAuthAdapter } from '../naa/mapping/NestedAppAuthAdapter.mjs';\nimport { NestedAppAuthError } from '../error/NestedAppAuthError.mjs';\nimport { EventHandler } from '../event/EventHandler.mjs';\nimport { EventType } from '../event/EventType.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass NestedAppAuthController {\n    constructor(operatingContext) {\n        this.operatingContext = operatingContext;\n        const proxy = this.operatingContext.getBridgeProxy();\n        if (proxy !== undefined) {\n            this.bridgeProxy = proxy;\n        }\n        else {\n            throw new Error(\"unexpected: bridgeProxy is undefined\");\n        }\n        // Set the configuration.\n        this.config = operatingContext.getConfig();\n        // Initialize logger\n        this.logger = this.operatingContext.getLogger();\n        // Initialize performance client\n        this.performanceClient = this.config.telemetry.client;\n        // Initialize the crypto class.\n        this.browserCrypto = operatingContext.isBrowserEnvironment()\n            ? new CryptoOps(this.logger, this.performanceClient)\n            : DEFAULT_CRYPTO_IMPLEMENTATION;\n        this.eventHandler = new EventHandler(this.logger, this.browserCrypto);\n        this.nestedAppAuthAdapter = new NestedAppAuthAdapter(this.config.auth.clientId, this.config.auth.clientCapabilities, this.browserCrypto, this.logger);\n    }\n    getBrowserStorage() {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    getEventHandler() {\n        return this.eventHandler;\n    }\n    static async createController(operatingContext) {\n        const controller = new NestedAppAuthController(operatingContext);\n        return Promise.resolve(controller);\n    }\n    initialize() {\n        // do nothing not required by this controller\n        return Promise.resolve();\n    }\n    async acquireTokenInteractive(request) {\n        this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_START, InteractionType.Popup, request);\n        const atPopupMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.AcquireTokenPopup, request.correlationId);\n        atPopupMeasurement?.add({ nestedAppAuthRequest: true });\n        try {\n            const naaRequest = this.nestedAppAuthAdapter.toNaaTokenRequest(request);\n            const response = await this.bridgeProxy.getTokenInteractive(naaRequest);\n            const result = this.nestedAppAuthAdapter.fromNaaTokenResponse(naaRequest, response);\n            this.operatingContext.setActiveAccount(result.account);\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_SUCCESS, InteractionType.Popup, result);\n            atPopupMeasurement.add({\n                accessTokenSize: result.accessToken.length,\n                idTokenSize: result.idToken.length,\n            });\n            atPopupMeasurement.end({\n                success: true,\n                requestId: result.requestId,\n            });\n            return result;\n        }\n        catch (e) {\n            const error = this.nestedAppAuthAdapter.fromBridgeError(e);\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Popup, null, e);\n            atPopupMeasurement.end({\n                errorCode: error.errorCode,\n                subErrorCode: error.subError,\n                success: false,\n            });\n            throw error;\n        }\n    }\n    async acquireTokenSilentInternal(request) {\n        this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_START, InteractionType.Silent, request);\n        const ssoSilentMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.SsoSilent, request.correlationId);\n        ssoSilentMeasurement?.increment({\n            visibilityChangeCount: 0,\n        });\n        ssoSilentMeasurement?.add({\n            nestedAppAuthRequest: true,\n        });\n        try {\n            const naaRequest = this.nestedAppAuthAdapter.toNaaSilentTokenRequest(request);\n            const response = await this.bridgeProxy.getTokenSilent(naaRequest);\n            const result = this.nestedAppAuthAdapter.fromNaaTokenResponse(naaRequest, response);\n            this.operatingContext.setActiveAccount(result.account);\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_SUCCESS, InteractionType.Silent, result);\n            ssoSilentMeasurement?.add({\n                accessTokenSize: result.accessToken.length,\n                idTokenSize: result.idToken.length,\n            });\n            ssoSilentMeasurement?.end({\n                success: true,\n                requestId: result.requestId,\n            });\n            return result;\n        }\n        catch (e) {\n            const error = this.nestedAppAuthAdapter.fromBridgeError(e);\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Silent, null, e);\n            ssoSilentMeasurement?.end({\n                errorCode: error.errorCode,\n                subErrorCode: error.subError,\n                success: false,\n            });\n            throw error;\n        }\n    }\n    async acquireTokenPopup(request) {\n        return this.acquireTokenInteractive(request);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    acquireTokenRedirect(request) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    async acquireTokenSilent(silentRequest) {\n        return this.acquireTokenSilentInternal(silentRequest);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    acquireTokenByCode(request // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    acquireTokenNative(request, apiId, // eslint-disable-line @typescript-eslint/no-unused-vars\n    accountId // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    acquireTokenByRefreshToken(commonRequest, // eslint-disable-line @typescript-eslint/no-unused-vars\n    silentRequest // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    /**\n     * Adds event callbacks to array\n     * @param callback\n     */\n    addEventCallback(callback) {\n        return this.eventHandler.addEventCallback(callback);\n    }\n    /**\n     * Removes callback with provided id from callback array\n     * @param callbackId\n     */\n    removeEventCallback(callbackId) {\n        this.eventHandler.removeEventCallback(callbackId);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    addPerformanceCallback(callback) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    removePerformanceCallback(callbackId) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    enableAccountStorageEvents() {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    disableAccountStorageEvents() {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    getAccount(accountFilter) {\n        throw NestedAppAuthError.createUnsupportedError();\n        // TODO: Look at standard implementation\n    }\n    getAccountByHomeId(homeAccountId) {\n        const currentAccount = this.operatingContext.getActiveAccount();\n        if (currentAccount !== undefined) {\n            if (currentAccount.homeAccountId === homeAccountId) {\n                return this.nestedAppAuthAdapter.fromNaaAccountInfo(currentAccount);\n            }\n            else {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    getAccountByLocalId(localId) {\n        const currentAccount = this.operatingContext.getActiveAccount();\n        if (currentAccount !== undefined) {\n            if (currentAccount.localAccountId === localId) {\n                return this.nestedAppAuthAdapter.fromNaaAccountInfo(currentAccount);\n            }\n            else {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    getAccountByUsername(userName) {\n        const currentAccount = this.operatingContext.getActiveAccount();\n        if (currentAccount !== undefined) {\n            if (currentAccount.username === userName) {\n                return this.nestedAppAuthAdapter.fromNaaAccountInfo(currentAccount);\n            }\n            else {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    getAllAccounts() {\n        const currentAccount = this.operatingContext.getActiveAccount();\n        if (currentAccount !== undefined) {\n            return [\n                this.nestedAppAuthAdapter.fromNaaAccountInfo(currentAccount),\n            ];\n        }\n        else {\n            return [];\n        }\n    }\n    handleRedirectPromise(hash // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    loginPopup(request // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n        if (request !== undefined) {\n            return this.acquireTokenInteractive(request);\n        }\n        else {\n            throw NestedAppAuthError.createUnsupportedError();\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    loginRedirect(request) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    logout(logoutRequest) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    logoutRedirect(logoutRequest // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    logoutPopup(logoutRequest // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    ssoSilent(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    request) {\n        return this.acquireTokenSilentInternal(request);\n    }\n    getTokenCache() {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    /**\n     * Returns the logger instance\n     */\n    getLogger() {\n        return this.logger;\n    }\n    /**\n     * Replaces the default logger set in configurations with new Logger with new configurations\n     * @param logger Logger instance\n     */\n    setLogger(logger) {\n        this.logger = logger;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    setActiveAccount(account) {\n        /*\n         * StandardController uses this to allow the developer to set the active account\n         * in the nested app auth scenario the active account is controlled by the app hosting the nested app\n         */\n        this.logger.warning(\"nestedAppAuth does not support setActiveAccount\");\n        return;\n    }\n    getActiveAccount() {\n        const currentAccount = this.operatingContext.getActiveAccount();\n        if (currentAccount !== undefined) {\n            return this.nestedAppAuthAdapter.fromNaaAccountInfo(currentAccount);\n        }\n        else {\n            return null;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    initializeWrapperLibrary(sku, version) {\n        /*\n         * Standard controller uses this to set the sku and version of the wrapper library in the storage\n         * we do nothing here\n         */\n        return;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    setNavigationClient(navigationClient) {\n        this.logger.warning(\"setNavigationClient is not supported in nested app auth\");\n    }\n    getConfiguration() {\n        return this.config;\n    }\n    isBrowserEnv() {\n        return this.operatingContext.isBrowserEnvironment();\n    }\n    getBrowserCrypto() {\n        return this.browserCrypto;\n    }\n    getPerformanceClient() {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    getRedirectResponse() {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    preflightBrowserEnvironmentCheck(interactionType, // eslint-disable-line @typescript-eslint/no-unused-vars\n    setInteractionInProgress // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async clearCache(logoutRequest) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async hydrateCache(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    result, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    request) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n}\n\nexport { NestedAppAuthController };\n//# sourceMappingURL=NestedAppAuthController.mjs.map\n"],"names":["BridgeStatusCode","NestedAppAuthAdapter","constructor","clientId","clientCapabilities","crypto","logger","this","toNaaSilentTokenRequest","request","extraParams","undefined","extraQueryParameters","Map","Object","entries","userObjectId","account","homeAccountId","authority","scope","scopes","join","correlationId","createNewGuid","prompt","claims","authenticationScheme","extraParameters","toNaaTokenRequest","nonce","state","fromNaaTokenResponse","response","expiresOn","Date","TimeUtils","nowSeconds","expires_in","fromNaaAccountInfo","environment","uniqueId","tenantId","split","idToken","id_token","idTokenClaims","accessToken","access_token","fromCache","tokenType","requestId","extExpiresOn","fromAccount","tokenClaims","AuthToken","base64Decode","username","localAccountId","name","fromBridgeError","error","status","isBridgeError","AuthError","USER_CANCEL","ClientAuthError","ClientAuthErrorCodes","userCanceled","NO_NETWORK","noNetworkConnectivity","ACCOUNT_UNAVAILABLE","noAccountFound","DISABLED","nestedAppAuthBridgeDisabled","NESTED_APP_AUTH_UNAVAILABLE","code","description","TRANSIENT_ERROR","PERSISTENT_ERROR","ServerError","USER_INTERACTION_REQUIRED","InteractionRequiredAuthError","NestedAppAuthErrorMessage","NestedAppAuthError","errorCode","errorMessage","super","setPrototypeOf","prototype","createUnsupportedError","NestedAppAuthController","operatingContext","proxy","getBridgeProxy","Error","bridgeProxy","config","getConfig","getLogger","performanceClient","telemetry","client","browserCrypto","isBrowserEnvironment","CryptoOps","eventHandler","EventHandler","nestedAppAuthAdapter","auth","getBrowserStorage","getEventHandler","createController","controller","Promise","resolve","initialize","acquireTokenInteractive","emitEvent","EventType","ACQUIRE_TOKEN_START","Popup","atPopupMeasurement","startMeasurement","PerformanceEvent","AcquireTokenPopup","add","nestedAppAuthRequest","naaRequest","getTokenInteractive","result","setActiveAccount","ACQUIRE_TOKEN_SUCCESS","accessTokenSize","length","idTokenSize","end","success","e","ACQUIRE_TOKEN_FAILURE","subErrorCode","subError","acquireTokenSilentInternal","Silent","ssoSilentMeasurement","SsoSilent","increment","visibilityChangeCount","getTokenSilent","acquireTokenPopup","acquireTokenRedirect","acquireTokenSilent","silentRequest","acquireTokenByCode","acquireTokenNative","apiId","accountId","acquireTokenByRefreshToken","commonRequest","addEventCallback","callback","removeEventCallback","callbackId","addPerformanceCallback","removePerformanceCallback","enableAccountStorageEvents","disableAccountStorageEvents","getAccount","accountFilter","getAccountByHomeId","currentAccount","getActiveAccount","getAccountByLocalId","localId","getAccountByUsername","userName","getAllAccounts","handleRedirectPromise","hash","loginPopup","loginRedirect","logout","logoutRequest","logoutRedirect","logoutPopup","ssoSilent","getTokenCache","setLogger","warning","initializeWrapperLibrary","sku","version","setNavigationClient","navigationClient","getConfiguration","isBrowserEnv","getBrowserCrypto","getPerformanceClient","getRedirectResponse","preflightBrowserEnvironmentCheck","interactionType","setInteractionInProgress","clearCache","hydrateCache"],"sourceRoot":""}